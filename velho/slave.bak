//Definicao de comunicacao
#define BT_CONN 0			//Canal de comunicacao Bluetooth
#define INBOX 5				//Caixa de mensagens recebidas
#define OUTBOX 1			//Caixa de mensagens enviadas

//Definicao de mensagens
#define MSG_SENSOR_DIR 2
#define MSG_SENSOR_ESQ 1

//Definicao de sensores (VERIFICAR ESSA CORRESPONDENCIA)
#define SENSOR_TOQ_ESQ SENSOR_1
#define SENSOR_TOQ_DIR SENSOR_2

sub BTCheck(int conn)
{
	//Checa comunicação bluetooth
	if(!(BluetoothStatus(conn)==NO_ERR))
	{
		TextOut(5, 0, "ERROR BT");
		Wait(1000);
		Stop(true);
	}
}

/* Recebe uma numero (mensagem) correspondente a um dado requerido e manda esse dado
 * por bluetooth. */
task bluetooth() {

	int msg = 0;
	int ans;

	while(1) {

    ans = 0;

    Wait(10);
    if(SENSOR_TOQ_ESQ)
       ans+= 10;
    
    if(SENSOR_TOQ_DIR)
       ans+= 1;
    
    SendResponseNumber(OUTBOX, ans);

    /*
    //Recebe a mensagem do Master
		ReceiveRemoteNumber(INBOX, true, msg);

		Wait(90);

	  //Responde o valor do sensor que o master mandou
		if(msg == MSG_SENSOR_ESQ) {
		    ans = SENSOR_TOQ_ESQ;
		    ans = (-1) * (ans + 1);
		    TextOut(0, 0, "Sensor Esq");
		    Wait(10);
		    ClearLine(0);
		    SendResponseNumber(OUTBOX, ans);
		}
		else if(msg == MSG_SENSOR_DIR) {
		    ans = SENSOR_TOQ_DIR;
		    ans++;
		    TextOut(0, 8, "Sensor Dir");
		    Wait(10);
		    ClearLine(8);
		    SendResponseNumber(OUTBOX, ans);
		}
		else
		{
		    TextOut(0, 16, "Nenhuma Mensagem");
		    Wait(10);
		    ClearLine(16);
		}
   */
  }
}

task main() {
	Wait(100);
	ClearLine(16);
	//Seta sensores e chama funcao de comunicacao bluetooth
	BTCheck(BT_CONN);
	SetSensor(IN_1, SENSOR_TOUCH);
	SetSensor(IN_2, SENSOR_TOUCH);
	
	StartTask(bluetooth);	
}
